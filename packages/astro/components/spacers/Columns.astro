---
import { Sizes, sizes, uid } from '../../index.ts'
import Stack from './Stack.astro'
import type { ColumnsProps } from '../types.ts'

function getBreakpoint(switchAt?: number | string | keyof Sizes) {
	if (!switchAt) {
		return undefined
	}

	if (switchAt in sizes) {
		return sizes[switchAt]
	}

	if (typeof switchAt === 'number') {
		return `${switchAt}px`
	}

	return switchAt
}

const {
	columns = 1,
	dense = false,
	switchAt,
	style,
	id = uid(),
	...props
} = Astro.props as ColumnsProps

const maybeColumns = columns || 1
const maybeBreakpoint = getBreakpoint(switchAt)

const inlineStyle =
	maybeBreakpoint &&
	`
    @media (min-width: ${maybeBreakpoint}) {
        #${id} {
            --columns: ${maybeColumns};
        }
    }
`

const componentStyle = [
	maybeColumns && `--columns: ${maybeColumns}`,
	style
].filter(Boolean).join(';')
---

<Stack data-chisel-columns={dense ? 'dense' : ''} {id} style={componentStyle} {...props}>
	<slot />
</Stack>

{inlineStyle && (
    <style set:html={inlineStyle}></style>
)}

<style global>
	[data-chisel-columns] {
		box-sizing: border-box;
		display: grid;
		grid-template-columns: repeat(var(--columns, 1), 1fr);
		gap: var(--gutter, 0px);
		grid-auto-flow: row;
	}
	[data-chisel-columns='dense'] {
		grid-auto-flow: row dense;
	}
	[data-chisel-columns] > * {
		margin: 0;
	}
</style>