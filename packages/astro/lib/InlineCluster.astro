---
import { joinStyles } from '@chisel-ui/core'
import './InlineCluster.css'
import Layout from './Layout.astro'
import type { Theme } from '@chisel-ui/core'
import type { Props as LayoutProps } from './Layout.astro'

type Justification = 'start' | 'end' | 'center' | 'between' | 'around'
type Alignment = 'start' | 'end' | 'center' | 'stretch'

export interface Props<T extends Theme = Theme> extends LayoutProps<T> {
	justify?: Justification
	align?: Alignment
}

function getJustify(value: Justification) {
	switch (value) {
		case 'end':
			return 'flex-end'
		case 'center':
			return 'center'
		case 'between':
			return 'space-between'
		case 'around':
			return 'space-around'
		case 'start':
		default:
			return 'flex-start'
	}
}

function getAlign(value: Alignment) {
	switch (value) {
		case 'end':
			return 'flex-end'
		case 'center':
			return 'center'
		case 'stretch':
			return 'stretch'
		case 'start':
		default:
			return 'flex-start'
	}
}

const {
	justify = 'start',
	align = 'start',
	style = '',
	...props
} = Astro.props as Props

const safeJustify = getJustify(justify)
const safeAlign = getAlign(align)

const componentStyle = joinStyles(
	`--justify: ${safeJustify}`,
	`--align: ${safeAlign}`,
	style
)
---

<Layout data-chisel-inline-cluster style={componentStyle} {...props}>
	<slot />
</Layout>
