---
import { getGapValue, joinStyles } from '@chisel-ui/core'
import Component from './Component.astro'
import type { Gap, Theme } from '@chisel-ui/core'
import type { Props as ComponentProps } from './Component.astro'

export interface Props<T extends Theme = Theme> extends ComponentProps<T> {
	gap?: Gap<T['gaps']>
	inlineGap?: Gap<T['gaps']>
	blockGap?: Gap<T['gaps']>
}

const {
	gap = '0px',
	inlineGap,
	blockGap,
	theme = {},
	style = '',
	...props
} = Astro.props as Props

const safeInlineGap = getGapValue(theme, inlineGap ?? gap)
const safeBlockGap = getGapValue(theme, blockGap ?? gap)

const componentStyles = joinStyles(
	safeInlineGap && `--gap-inline: ${safeInlineGap}`,
	safeBlockGap && `--gap-block: ${safeBlockGap}`,
	style
)
---

<Component style={componentStyles} {...props}>
	<slot />
</Component>
