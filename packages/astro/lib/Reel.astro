---
import { getCssLength, joinStyles } from '@chisel-ui/core'
import Component from './Component.astro'
import type { CSSLength } from '@chisel-ui/core'
import type { Props as ComponentProps } from './Component.astro'

export interface Props extends ComponentProps {
    itemWidth?: 'auto' | CSSLength
    height?: 'auto' | CSSLength
}

const {
    itemWidth,
    height,
    style = '',
    ...props
} = Astro.props as Props

const maybeItemWidth = getCssLength(itemWidth)
const maybeHeight = getCssLength(height)

const componentStyle = joinStyles(
    maybeItemWidth && `--item-width: ${maybeItemWidth}`,
    maybeHeight && `--height: ${maybeHeight}`,
    style
)
---

<Component data-chisel-reel style={componentStyle} {...props}>
    <slot />
</Component>

<style is:global>
[data-chisel-reel] {
    display: flex;
    block-size: var(--height, auto);
    overflow-y: hidden;
    overflow-x: auto;
    gap: var(--gap-block, var(--gap-base)) var(--gap-inline, var(--gap-base));
}

[data-chisel-reel] > * {
    flex: 0 0 var(--item-width, auto);
}

[data-chisel-reel] > :is(img, video) {
    block-size: 100%;
    flex-basis: auto;
    width: auto;
}

</style>